{
  "name": "re-password",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [
    "re-form",
    "re-input-group"
  ],
  "files": [
    {
      "path": "ui/reform/re-password.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { InputHTMLAttributes } from \"react\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport { ReFormFieldProps } from \"@/registry/new-york/ui/reform/re-form\"\nimport { ReInput } from \"@/registry/new-york/ui/reform/re-input\"\nimport { ReInputGroup } from \"@/registry/new-york/ui/reform/re-input-group\"\n\nexport type Props = Omit<\n  InputHTMLAttributes<HTMLInputElement> & {\n    name: string\n    label?: string\n    description?: string\n  },\n  \"type\"\n> & {\n  show?: React.ReactNode\n  hide?: React.ReactNode\n}\n\nconst RePassword = React.forwardRef<\n  HTMLInputElement,\n  React.ComponentProps<\"input\"> &\n    ReFormFieldProps & {\n      show?: React.ReactNode\n      hide?: React.ReactNode\n    }\n>(\n  (\n    {\n      label,\n      description,\n      show = <i className=\"after:content-['ðŸ”’'] after:not-italic\" />,\n      hide = <i className=\"after:content-['ðŸ”“'] after:not-italic\" />,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const [type, setType] = React.useState(\"password\")\n    const toggleType = React.useCallback(() => {\n      setType(type === \"password\" ? \"text\" : \"password\")\n    }, [type])\n\n    return (\n      <ReInputGroup\n        label={label}\n        description={description}\n        className={cn(\"\", \"\", className)}\n        disabled={props.disabled}\n      >\n        <ReInput ref={ref} {...props} className=\"w-full\" type={type} />\n        <Button\n          type=\"button\"\n          variant=\"ghost\"\n          className=\"w-10 h-10\"\n          onClick={toggleType}\n        >\n          {type === \"password\" ? show : hide}\n        </Button>\n      </ReInputGroup>\n    )\n  }\n)\n\nRePassword.displayName = \"RePassword\"\nexport { RePassword }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}